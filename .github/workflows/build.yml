# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Release

on:
  push:
    branches: [v7]
  pull_request:
    branches: [v7]
    types: [opened, synchronize, closed]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run lint
        run: yarn test:lint

  test-core:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:core --since origin/v7

  test-specs:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:specs --since origin/v7

  test-platform:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:platform --since origin/v7

  test-orm:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:orm --since origin/v7

  test-graphql:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:graphql --since origin/v7

  test-security:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:security --since origin/v7

  test-third-parties:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run test
        run: yarn test:third-parties --since origin/v7

  test-download-artifacts:
    runs-on: ubuntu-latest
    needs:
      [lint, test-core, test-specs, test-platform, test-orm, test-security, test-graphql, test-third-parties]
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Download Core vitest config files
        uses: actions/download-artifact@v4
        with:
          path: .
          pattern: vitest-config-*
          merge-multiple: true
      - name: git status
        run: git status
      - name: ls
        run: ls -la

  deploy-packages:
    runs-on: ubuntu-latest
    needs:
      [lint, test-core, test-specs, test-platform, test-orm, test-security, test-graphql, test-third-parties]
    if: github.event_name != 'pull_request' && contains('refs/heads/v7', github.ref)

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --network-timeout 500000

      - name: Download Core vitest config files
        uses: actions/download-artifact@v4
        with:
          pattern: vitest-config-*
          merge-multiple: true
      - name: "Git status"
        run: git status
      - name: Release packages
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn release
      - name: "Trigger Website workflow"
        run: |
          curl -X POST  https://api.github.com/repos/tsedio/tsed/actions/workflows/website.yml/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -H 'Authorization: Bearer ${{secrets.GH_TOKEN}}' \
          --data '{"ref": "${{github.ref_name}}"}'
